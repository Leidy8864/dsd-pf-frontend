{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Especialidad } from 'src/app/shared/models/especialidad';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/http/especialidad.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../../shared/components/inputs/einput/einput.component\";\nimport * as i6 from \"../../../../shared/components/buttons/ebutton/ebutton.component\";\n\nfunction EspecialidadFormComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2, \"Especialidad\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"e-input\", 3);\n    i0.ɵɵelement(4, \"e-input\", 4);\n    i0.ɵɵelementStart(5, \"div\", 5);\n    i0.ɵɵelementStart(6, \"e-button\", 6);\n    i0.ɵɵlistener(\"click\", function EspecialidadFormComponent_form_0_Template_e_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.save();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"e-button\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formGroup);\n  }\n}\n\nexport let EspecialidadFormComponent = /*#__PURE__*/(() => {\n  class EspecialidadFormComponent {\n    constructor(especialidadService, formBuilder, activatedRoute, router) {\n      this.especialidadService = especialidadService;\n      this.formBuilder = formBuilder;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.load();\n    }\n\n    load() {\n      let especialidad = this.activatedRoute.snapshot.data['especialidad'];\n      this.buildForm(especialidad ? especialidad : new Especialidad());\n    }\n\n    buildForm(especialidad) {\n      this.formGroup = this.formBuilder.group({\n        id: [especialidad.id, Validators.required],\n        nombre: [especialidad.nombre, Validators.required],\n        descripcion: [especialidad.descripcion, Validators.required]\n      });\n    }\n\n    save() {\n      this.especialidadService.save(this.formGroup.value).subscribe(data => {\n        this.router.navigate(['admin/especialidad']);\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  EspecialidadFormComponent.ɵfac = function EspecialidadFormComponent_Factory(t) {\n    return new (t || EspecialidadFormComponent)(i0.ɵɵdirectiveInject(i1.EspecialidadService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  EspecialidadFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EspecialidadFormComponent,\n    selectors: [[\"app-especialidad-form\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", 4, \"ngIf\"], [\"novalidate\", \"\", 1, \"form\", 3, \"formGroup\"], [1, \"title-l\"], [\"desc\", \"Nombre\", \"formControlName\", \"nombre\"], [\"desc\", \"Descripci\\u00F3n\", \"formControlName\", \"descripcion\"], [1, \"actions-r\"], [\"desc\", \"Aceptar\", 3, \"click\"], [\"desc\", \"Cancelar\", \"routerLink\", \"/admin/especialidad\"]],\n    template: function EspecialidadFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EspecialidadFormComponent_form_0_Template, 8, 1, \"form\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup);\n      }\n    },\n    directives: [i4.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i5.EinputComponent, i2.NgControlStatus, i2.FormControlName, i6.EbuttonComponent, i3.RouterLink],\n    styles: [\"\"]\n  });\n  return EspecialidadFormComponent;\n})();\nexport let EspecialidadFormResolve = /*#__PURE__*/(() => {\n  class EspecialidadFormResolve {\n    constructor(especialidadService) {\n      this.especialidadService = especialidadService;\n    }\n\n    resolve(route, state) {\n      let id = Number(route.paramMap.get('id'));\n      return id ? this.especialidadService.findById(id) : new Especialidad();\n    }\n\n  }\n\n  EspecialidadFormResolve.ɵfac = function EspecialidadFormResolve_Factory(t) {\n    return new (t || EspecialidadFormResolve)(i0.ɵɵinject(i1.EspecialidadService));\n  };\n\n  EspecialidadFormResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EspecialidadFormResolve,\n    factory: EspecialidadFormResolve.ɵfac\n  });\n  return EspecialidadFormResolve;\n})();","map":null,"metadata":{},"sourceType":"module"}