{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Especialista } from 'src/app/shared/models/especialista';\nimport { Horario } from 'src/app/shared/models/horario';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/http/especialista.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/core/http/horario.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../../shared/components/inputs/einput/einput.component\";\nimport * as i7 from \"../../../../shared/components/selects/eselect/eselect.component\";\nimport * as i8 from \"../../../../shared/components/buttons/ebutton/ebutton.component\";\n\nfunction EspecialistaFormComponent_form_0_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelement(1, \"e-input\", 15);\n    i0.ɵɵelement(2, \"e-input\", 16);\n    i0.ɵɵelementStart(3, \"e-button\", 17);\n    i0.ɵɵlistener(\"click\", function EspecialistaFormComponent_form_0_div_12_Template_e_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const i_r3 = restoredCtx.index;\n      const horario_r2 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.eliminarHorario(i_r3, horario_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const horario_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.parseFormGroup(horario_r2));\n  }\n}\n\nfunction EspecialistaFormComponent_form_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2, \"Especialista\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"e-input\", 3);\n    i0.ɵɵelement(4, \"e-input\", 4);\n    i0.ɵɵelement(5, \"e-input\", 5);\n    i0.ɵɵelement(6, \"e-select\", 6);\n    i0.ɵɵelement(7, \"e-select\", 7);\n    i0.ɵɵelementStart(8, \"div\", 2);\n    i0.ɵɵtext(9, \"Turnos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 8);\n    i0.ɵɵelementStart(11, \"e-button\", 9);\n    i0.ɵɵlistener(\"click\", function EspecialistaFormComponent_form_0_Template_e_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.agregarHorario();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, EspecialistaFormComponent_form_0_div_12_Template, 4, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 11);\n    i0.ɵɵelementStart(14, \"e-button\", 12);\n    i0.ɵɵlistener(\"click\", function EspecialistaFormComponent_form_0_Template_e_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.save();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"e-button\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formGroup);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"data\", ctx_r0.especialidades)(\"default\", 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r0.sucursales)(\"default\", 0);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.horarios.controls);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"enable\", ctx_r0.formGroup.valid && ctx_r0.horarios.length >= 6);\n  }\n}\n\nexport let EspecialistaFormComponent = /*#__PURE__*/(() => {\n  class EspecialistaFormComponent {\n    constructor(especialistaService, formBuilder, activatedRoute, router, horarioService) {\n      this.especialistaService = especialistaService;\n      this.formBuilder = formBuilder;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.horarioService = horarioService;\n      this.formArray = this.formBuilder.array([]);\n      this.especialidades = [];\n      this.sucursales = [];\n      this.load();\n    }\n\n    parseFormGroup(abstractControl) {\n      return abstractControl;\n    }\n\n    load() {\n      let especialistaLoad = this.activatedRoute.snapshot.data['load'];\n      this.especialidades = especialistaLoad.especialidades;\n      this.sucursales = especialistaLoad.sucursales;\n      this.buildForm(especialistaLoad.especialista != null ? especialistaLoad.especialista : new Especialista());\n    }\n\n    formatValue() {\n      this.formGroup.value.id_sucursal = Number(this.formGroup.value.id_sucursal);\n      this.formGroup.value.id_especialidad = Number(this.formGroup.value.id_especialidad);\n      return this.formGroup.value;\n    }\n\n    buildForm(especialista) {\n      this.formGroup = this.formBuilder.group({\n        id: [especialista.id, Validators.required],\n        nombres: [especialista.nombres, Validators.required],\n        apellidos: [especialista.apellidos, Validators.required],\n        dni: [especialista.dni, Validators.required],\n        id_especialidad: [especialista.id_especialidad, [Validators.required, Validators.min(1)]],\n        id_sucursal: [especialista.id_sucursal, [Validators.required, Validators.min(1)]],\n        horarios: this.formBuilder.array([])\n      });\n      especialista.horarios.forEach(item => {\n        this.agregarHorario(item);\n      });\n    }\n\n    get horarios() {\n      return this.formGroup.get('horarios');\n    }\n\n    agregarHorario(horario = new Horario()) {\n      this.horarios.push(this.formBuilder.group({\n        id: [horario.id, Validators.required],\n        inicio: [horario.inicio, Validators.required],\n        fin: [horario.fin, Validators.required],\n        estado: [horario.estado, Validators.required]\n      }));\n    }\n\n    eliminarHorario(i, abstractControl) {\n      var _a;\n\n      let id = (_a = abstractControl.get('id')) === null || _a === void 0 ? void 0 : _a.value;\n      if (id != 0 && id != null && id != undefined) this.horarioService.deleteById(id).subscribe(() => this.horarios.removeAt(i));else this.horarios.removeAt(i);\n    }\n\n    save() {\n      this.especialistaService.save(this.formatValue()).subscribe(data => {\n        this.router.navigate(['admin/especialista']);\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  EspecialistaFormComponent.ɵfac = function EspecialistaFormComponent_Factory(t) {\n    return new (t || EspecialistaFormComponent)(i0.ɵɵdirectiveInject(i1.EspecialistaService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HorarioService));\n  };\n\n  EspecialistaFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EspecialistaFormComponent,\n    selectors: [[\"app-especialista-form\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"form\", \"novalidate\", \"\", 3, \"formGroup\", 4, \"ngIf\"], [\"novalidate\", \"\", 1, \"form\", 3, \"formGroup\"], [1, \"title-l\"], [\"desc\", \"Nombres\", \"formControlName\", \"nombres\"], [\"desc\", \"Apellidos\", \"formControlName\", \"apellidos\"], [\"desc\", \"DNI\", \"formControlName\", \"dni\"], [\"desc\", \"Especialidad\", \"formControlName\", \"id_especialidad\", \"key\", \"id\", \"display\", \"nombre\", 3, \"data\", \"default\"], [\"desc\", \"Sucursal\", \"formControlName\", \"id_sucursal\", \"key\", \"id\", \"display\", \"nombre\", 3, \"data\", \"default\"], [\"formArrayName\", \"horarios\", 1, \"horarios\"], [\"desc\", \"Agregar Nuevo Horario\", 3, \"click\"], [\"class\", \"horario\", 3, \"formGroup\", 4, \"ngFor\", \"ngForOf\"], [1, \"actions-r\"], [\"desc\", \"Aceptar\", 3, \"enable\", \"click\"], [\"routerLink\", \"/admin/especialista\", \"desc\", \"Cancelar\"], [1, \"horario\", 3, \"formGroup\"], [\"formControlName\", \"inicio\", \"type\", \"time\"], [\"formControlName\", \"fin\", \"type\", \"time\"], [\"desc\", \"X\", 3, \"click\"]],\n    template: function EspecialistaFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, EspecialistaFormComponent_form_0_Template, 16, 7, \"form\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.formGroup);\n      }\n    },\n    directives: [i5.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i6.EinputComponent, i2.NgControlStatus, i2.FormControlName, i7.EselectComponent, i2.FormArrayName, i8.EbuttonComponent, i5.NgForOf, i3.RouterLink],\n    styles: [\".form[_ngcontent-%COMP%]   .horarios[_ngcontent-%COMP%]{padding:1rem;border:solid 1px #d1dae2;border-radius:.5rem;display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:1rem 3rem;gap:1rem 3rem}.form[_ngcontent-%COMP%]   .horarios[_ngcontent-%COMP%] > e-button[_ngcontent-%COMP%]{grid-column:1/-1}.form[_ngcontent-%COMP%]   .horarios[_ngcontent-%COMP%]   .horario[_ngcontent-%COMP%]{display:grid;grid-gap:1rem;gap:1rem;grid-template-columns:3fr 3fr 1fr}@media (max-width: 650px){.form[_ngcontent-%COMP%]   .horarios[_ngcontent-%COMP%]{grid-template-columns:1fr}}\"]\n  });\n  return EspecialistaFormComponent;\n})();\nexport let EspecialistaFormResolve = /*#__PURE__*/(() => {\n  class EspecialistaFormResolve {\n    constructor(especialistaService) {\n      this.especialistaService = especialistaService;\n    }\n\n    resolve(route, state) {\n      let id = Number(route.paramMap.get('id'));\n      return this.especialistaService.load(id ? id : 0);\n    }\n\n  }\n\n  EspecialistaFormResolve.ɵfac = function EspecialistaFormResolve_Factory(t) {\n    return new (t || EspecialistaFormResolve)(i0.ɵɵinject(i1.EspecialistaService));\n  };\n\n  EspecialistaFormResolve.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EspecialistaFormResolve,\n    factory: EspecialistaFormResolve.ɵfac\n  });\n  return EspecialistaFormResolve;\n})();","map":null,"metadata":{},"sourceType":"module"}