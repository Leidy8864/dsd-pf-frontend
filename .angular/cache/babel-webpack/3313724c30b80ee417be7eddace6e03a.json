{"ast":null,"code":"import { EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"checkbox\"];\n\nfunction EcheckComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.desc);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"checked\": a0\n  };\n};\n\nexport let EcheckComponent = /*#__PURE__*/(() => {\n  class EcheckComponent {\n    constructor() {\n      //PROPERTIES\n      this.desc = '';\n      this.className = 'primary';\n      this.value = ''; //EVENTS\n\n      this.echange = new EventEmitter();\n\n      this.onChange = _ => {};\n\n      this.onTouched = () => {};\n    }\n\n    check() {\n      this.checkbox.nativeElement.click();\n    }\n\n    updateChanges(value) {\n      this.echange.emit(value);\n      this.onChange(this.value);\n    }\n\n    writeValue(value) {\n      this.value = value;\n      this.updateChanges(value);\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n\n    ngOnInit() {}\n\n  }\n\n  EcheckComponent.ɵfac = function EcheckComponent_Factory(t) {\n    return new (t || EcheckComponent)();\n  };\n\n  EcheckComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EcheckComponent,\n    selectors: [[\"echeck\"]],\n    viewQuery: function EcheckComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.checkbox = _t.first);\n      }\n    },\n    inputs: {\n      desc: \"desc\",\n      className: \"className\"\n    },\n    outputs: {\n      echange: \"echange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => EcheckComponent),\n      multi: true\n    }])],\n    decls: 5,\n    vars: 7,\n    consts: [[3, \"ngClass\", \"click\"], [1, \"action\", \"fas\", \"fa-check\"], [\"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [\"checkbox\", \"\"], [4, \"ngIf\"]],\n    template: function EcheckComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"click\", function EcheckComponent_Template_div_click_0_listener() {\n          return ctx.check();\n        });\n        i0.ɵɵelement(1, \"i\", 1);\n        i0.ɵɵelementStart(2, \"input\", 2, 3);\n        i0.ɵɵlistener(\"ngModelChange\", function EcheckComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.value = $event;\n        })(\"ngModelChange\", function EcheckComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.updateChanges($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, EcheckComponent_div_4_Template, 2, 1, \"div\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassMap(ctx.className);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx.value));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.desc != \"\");\n      }\n    },\n    directives: [i1.NgClass, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgModel, i1.NgIf],\n    styles: [\"[_nghost-%COMP%]{display:flex;justify-items:left;align-items:center;grid-gap:.5rem;gap:.5rem;color:#0091ff;font-size:.9rem;padding:0 .5rem}[_nghost-%COMP%]   .primary[_ngcontent-%COMP%], [_nghost-%COMP%]   .invert[_ngcontent-%COMP%]{display:flex;align-items:center;justify-items:left;border-radius:.3rem;height:1.2rem;width:1.2rem;cursor:pointer}[_nghost-%COMP%]   .primary[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   .primary[_ngcontent-%COMP%]   .action[_ngcontent-%COMP%], [_nghost-%COMP%]   .invert[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], [_nghost-%COMP%]   .invert[_ngcontent-%COMP%]   .action[_ngcontent-%COMP%]{display:none}[_nghost-%COMP%]   .primary[_ngcontent-%COMP%]{border:solid .15rem #0091ff;color:#0091ff}[_nghost-%COMP%]   .invert[_ngcontent-%COMP%]{border:solid .15rem #967300;color:#967300}[_nghost-%COMP%]   .checked[_ngcontent-%COMP%]   .action[_ngcontent-%COMP%]{display:block}\"]\n  });\n  return EcheckComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}